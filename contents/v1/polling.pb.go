// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.2
// source: contents/v1/polling.proto

package contents_grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PollingStatus int32

const (
	PollingStatus_POLLING_STATUS_ALL_UNSPECIFIED PollingStatus = 0
	PollingStatus_POLLING_STATUS_DRAFT           PollingStatus = 1
	PollingStatus_POLLING_STATUS_TRASH           PollingStatus = 2
	PollingStatus_POLLING_STATUS_PUBLISH         PollingStatus = 3
	PollingStatus_POLLING_STATUS_COMING_SOON     PollingStatus = 4
)

// Enum value maps for PollingStatus.
var (
	PollingStatus_name = map[int32]string{
		0: "POLLING_STATUS_ALL_UNSPECIFIED",
		1: "POLLING_STATUS_DRAFT",
		2: "POLLING_STATUS_TRASH",
		3: "POLLING_STATUS_PUBLISH",
		4: "POLLING_STATUS_COMING_SOON",
	}
	PollingStatus_value = map[string]int32{
		"POLLING_STATUS_ALL_UNSPECIFIED": 0,
		"POLLING_STATUS_DRAFT":           1,
		"POLLING_STATUS_TRASH":           2,
		"POLLING_STATUS_PUBLISH":         3,
		"POLLING_STATUS_COMING_SOON":     4,
	}
)

func (x PollingStatus) Enum() *PollingStatus {
	p := new(PollingStatus)
	*p = x
	return p
}

func (x PollingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PollingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_polling_proto_enumTypes[0].Descriptor()
}

func (PollingStatus) Type() protoreflect.EnumType {
	return &file_contents_v1_polling_proto_enumTypes[0]
}

func (x PollingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PollingStatus.Descriptor instead.
func (PollingStatus) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{0}
}

type PollingGetListRequest_Sort int32

const (
	PollingGetListRequest_NEWEST_UNSPECIFIED PollingGetListRequest_Sort = 0
	PollingGetListRequest_OLDEST             PollingGetListRequest_Sort = 1
	PollingGetListRequest_TITLE_ASCENDING    PollingGetListRequest_Sort = 2
	PollingGetListRequest_TITLE_DESCENDING   PollingGetListRequest_Sort = 3
)

// Enum value maps for PollingGetListRequest_Sort.
var (
	PollingGetListRequest_Sort_name = map[int32]string{
		0: "NEWEST_UNSPECIFIED",
		1: "OLDEST",
		2: "TITLE_ASCENDING",
		3: "TITLE_DESCENDING",
	}
	PollingGetListRequest_Sort_value = map[string]int32{
		"NEWEST_UNSPECIFIED": 0,
		"OLDEST":             1,
		"TITLE_ASCENDING":    2,
		"TITLE_DESCENDING":   3,
	}
)

func (x PollingGetListRequest_Sort) Enum() *PollingGetListRequest_Sort {
	p := new(PollingGetListRequest_Sort)
	*p = x
	return p
}

func (x PollingGetListRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PollingGetListRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_polling_proto_enumTypes[1].Descriptor()
}

func (PollingGetListRequest_Sort) Type() protoreflect.EnumType {
	return &file_contents_v1_polling_proto_enumTypes[1]
}

func (x PollingGetListRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PollingGetListRequest_Sort.Descriptor instead.
func (PollingGetListRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{4, 0}
}

type Polling struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title             string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status            PollingStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=contents.v1.PollingStatus" json:"status,omitempty"`
	ImageCoverUrl     string                 `protobuf:"bytes,15,opt,name=image_cover_url,json=imageCoverUrl,proto3" json:"image_cover_url,omitempty"`
	ImageCoverAlt     string                 `protobuf:"bytes,16,opt,name=image_cover_alt,json=imageCoverAlt,proto3" json:"image_cover_alt,omitempty"`
	Choice_1Label     string                 `protobuf:"bytes,4,opt,name=choice_1_label,json=choice1Label,proto3" json:"choice_1_label,omitempty"`
	Choice_1ArticleId int32                  `protobuf:"varint,5,opt,name=choice_1_article_id,json=choice1ArticleId,proto3" json:"choice_1_article_id,omitempty"`
	Choice_1Count     int32                  `protobuf:"varint,13,opt,name=choice_1_count,json=choice1Count,proto3" json:"choice_1_count,omitempty"`
	Choice_2Label     string                 `protobuf:"bytes,6,opt,name=choice_2_label,json=choice2Label,proto3" json:"choice_2_label,omitempty"`
	Choice_2ArticleId int32                  `protobuf:"varint,7,opt,name=choice_2_article_id,json=choice2ArticleId,proto3" json:"choice_2_article_id,omitempty"`
	Choice_2Count     int32                  `protobuf:"varint,14,opt,name=choice_2_count,json=choice2Count,proto3" json:"choice_2_count,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PublishedAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Choice_1Article   *Article               `protobuf:"bytes,11,opt,name=choice_1_article,json=choice1Article,proto3" json:"choice_1_article,omitempty"`
	Choice_2Article   *Article               `protobuf:"bytes,12,opt,name=choice_2_article,json=choice2Article,proto3" json:"choice_2_article,omitempty"`
}

func (x *Polling) Reset() {
	*x = Polling{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Polling) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Polling) ProtoMessage() {}

func (x *Polling) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Polling.ProtoReflect.Descriptor instead.
func (*Polling) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{0}
}

func (x *Polling) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Polling) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Polling) GetStatus() PollingStatus {
	if x != nil {
		return x.Status
	}
	return PollingStatus_POLLING_STATUS_ALL_UNSPECIFIED
}

func (x *Polling) GetImageCoverUrl() string {
	if x != nil {
		return x.ImageCoverUrl
	}
	return ""
}

func (x *Polling) GetImageCoverAlt() string {
	if x != nil {
		return x.ImageCoverAlt
	}
	return ""
}

func (x *Polling) GetChoice_1Label() string {
	if x != nil {
		return x.Choice_1Label
	}
	return ""
}

func (x *Polling) GetChoice_1ArticleId() int32 {
	if x != nil {
		return x.Choice_1ArticleId
	}
	return 0
}

func (x *Polling) GetChoice_1Count() int32 {
	if x != nil {
		return x.Choice_1Count
	}
	return 0
}

func (x *Polling) GetChoice_2Label() string {
	if x != nil {
		return x.Choice_2Label
	}
	return ""
}

func (x *Polling) GetChoice_2ArticleId() int32 {
	if x != nil {
		return x.Choice_2ArticleId
	}
	return 0
}

func (x *Polling) GetChoice_2Count() int32 {
	if x != nil {
		return x.Choice_2Count
	}
	return 0
}

func (x *Polling) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Polling) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Polling) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Polling) GetChoice_1Article() *Article {
	if x != nil {
		return x.Choice_1Article
	}
	return nil
}

func (x *Polling) GetChoice_2Article() *Article {
	if x != nil {
		return x.Choice_2Article
	}
	return nil
}

type PollingCreateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title               string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Status              PollingStatus          `protobuf:"varint,3,opt,name=status,proto3,enum=contents.v1.PollingStatus" json:"status,omitempty"`
	ImageCoverUrl       string                 `protobuf:"bytes,15,opt,name=image_cover_url,json=imageCoverUrl,proto3" json:"image_cover_url,omitempty"`
	ImageCoverAlt       string                 `protobuf:"bytes,16,opt,name=image_cover_alt,json=imageCoverAlt,proto3" json:"image_cover_alt,omitempty"`
	Choice_1Label       string                 `protobuf:"bytes,4,opt,name=choice_1_label,json=choice1Label,proto3" json:"choice_1_label,omitempty"`
	Choice_1ArticleId   int32                  `protobuf:"varint,5,opt,name=choice_1_article_id,json=choice1ArticleId,proto3" json:"choice_1_article_id,omitempty"`
	Choice_2Label       string                 `protobuf:"bytes,6,opt,name=choice_2_label,json=choice2Label,proto3" json:"choice_2_label,omitempty"`
	Choice_2ArticleId   int32                  `protobuf:"varint,7,opt,name=choice_2_article_id,json=choice2ArticleId,proto3" json:"choice_2_article_id,omitempty"`
	IsCustomPublishedAt bool                   `protobuf:"varint,13,opt,name=is_custom_published_at,json=isCustomPublishedAt,proto3" json:"is_custom_published_at,omitempty"`
	PublishedAt         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
}

func (x *PollingCreateUpdate) Reset() {
	*x = PollingCreateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingCreateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingCreateUpdate) ProtoMessage() {}

func (x *PollingCreateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingCreateUpdate.ProtoReflect.Descriptor instead.
func (*PollingCreateUpdate) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{1}
}

func (x *PollingCreateUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PollingCreateUpdate) GetStatus() PollingStatus {
	if x != nil {
		return x.Status
	}
	return PollingStatus_POLLING_STATUS_ALL_UNSPECIFIED
}

func (x *PollingCreateUpdate) GetImageCoverUrl() string {
	if x != nil {
		return x.ImageCoverUrl
	}
	return ""
}

func (x *PollingCreateUpdate) GetImageCoverAlt() string {
	if x != nil {
		return x.ImageCoverAlt
	}
	return ""
}

func (x *PollingCreateUpdate) GetChoice_1Label() string {
	if x != nil {
		return x.Choice_1Label
	}
	return ""
}

func (x *PollingCreateUpdate) GetChoice_1ArticleId() int32 {
	if x != nil {
		return x.Choice_1ArticleId
	}
	return 0
}

func (x *PollingCreateUpdate) GetChoice_2Label() string {
	if x != nil {
		return x.Choice_2Label
	}
	return ""
}

func (x *PollingCreateUpdate) GetChoice_2ArticleId() int32 {
	if x != nil {
		return x.Choice_2ArticleId
	}
	return 0
}

func (x *PollingCreateUpdate) GetIsCustomPublishedAt() bool {
	if x != nil {
		return x.IsCustomPublishedAt
	}
	return false
}

func (x *PollingCreateUpdate) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

type PollingGetOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PollingGetOneRequest) Reset() {
	*x = PollingGetOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingGetOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingGetOneRequest) ProtoMessage() {}

func (x *PollingGetOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingGetOneRequest.ProtoReflect.Descriptor instead.
func (*PollingGetOneRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{2}
}

func (x *PollingGetOneRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PollingGetOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Polling *Polling `protobuf:"bytes,1,opt,name=polling,proto3" json:"polling,omitempty"`
}

func (x *PollingGetOneResponse) Reset() {
	*x = PollingGetOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingGetOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingGetOneResponse) ProtoMessage() {}

func (x *PollingGetOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingGetOneResponse.ProtoReflect.Descriptor instead.
func (*PollingGetOneResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{3}
}

func (x *PollingGetOneResponse) GetPolling() *Polling {
	if x != nil {
		return x.Polling
	}
	return nil
}

type PollingGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusMultiple []PollingStatus            `protobuf:"varint,1,rep,packed,name=status_multiple,json=statusMultiple,proto3,enum=contents.v1.PollingStatus" json:"status_multiple,omitempty"`
	Search         string                     `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"`
	Page           int32                      `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	ContentPerPage int32                      `protobuf:"varint,4,opt,name=content_per_page,json=contentPerPage,proto3" json:"content_per_page,omitempty"`
	SortBy         PollingGetListRequest_Sort `protobuf:"varint,5,opt,name=sort_by,json=sortBy,proto3,enum=contents.v1.PollingGetListRequest_Sort" json:"sort_by,omitempty"`
}

func (x *PollingGetListRequest) Reset() {
	*x = PollingGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingGetListRequest) ProtoMessage() {}

func (x *PollingGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingGetListRequest.ProtoReflect.Descriptor instead.
func (*PollingGetListRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{4}
}

func (x *PollingGetListRequest) GetStatusMultiple() []PollingStatus {
	if x != nil {
		return x.StatusMultiple
	}
	return nil
}

func (x *PollingGetListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *PollingGetListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *PollingGetListRequest) GetContentPerPage() int32 {
	if x != nil {
		return x.ContentPerPage
	}
	return 0
}

func (x *PollingGetListRequest) GetSortBy() PollingGetListRequest_Sort {
	if x != nil {
		return x.SortBy
	}
	return PollingGetListRequest_NEWEST_UNSPECIFIED
}

type PollingGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Polling `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	MaxPage int32      `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Count   int32      `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *PollingGetListResponse) Reset() {
	*x = PollingGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingGetListResponse) ProtoMessage() {}

func (x *PollingGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingGetListResponse.ProtoReflect.Descriptor instead.
func (*PollingGetListResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{5}
}

func (x *PollingGetListResponse) GetData() []*Polling {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PollingGetListResponse) GetMaxPage() int32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *PollingGetListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type PollingCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *PollingCreateUpdate `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PollingCreateRequest) Reset() {
	*x = PollingCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingCreateRequest) ProtoMessage() {}

func (x *PollingCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingCreateRequest.ProtoReflect.Descriptor instead.
func (*PollingCreateRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{6}
}

func (x *PollingCreateRequest) GetData() *PollingCreateUpdate {
	if x != nil {
		return x.Data
	}
	return nil
}

type PollingCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Polling `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PollingCreateResponse) Reset() {
	*x = PollingCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingCreateResponse) ProtoMessage() {}

func (x *PollingCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingCreateResponse.ProtoReflect.Descriptor instead.
func (*PollingCreateResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{7}
}

func (x *PollingCreateResponse) GetData() *Polling {
	if x != nil {
		return x.Data
	}
	return nil
}

type PollingUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *PollingCreateUpdate `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PollingUpdateRequest) Reset() {
	*x = PollingUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingUpdateRequest) ProtoMessage() {}

func (x *PollingUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingUpdateRequest.ProtoReflect.Descriptor instead.
func (*PollingUpdateRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{8}
}

func (x *PollingUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PollingUpdateRequest) GetData() *PollingCreateUpdate {
	if x != nil {
		return x.Data
	}
	return nil
}

type PollingUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Polling `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PollingUpdateResponse) Reset() {
	*x = PollingUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingUpdateResponse) ProtoMessage() {}

func (x *PollingUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingUpdateResponse.ProtoReflect.Descriptor instead.
func (*PollingUpdateResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{9}
}

func (x *PollingUpdateResponse) GetData() *Polling {
	if x != nil {
		return x.Data
	}
	return nil
}

type PollingDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SoftDelete bool  `protobuf:"varint,2,opt,name=soft_delete,json=softDelete,proto3" json:"soft_delete,omitempty"`
}

func (x *PollingDeleteRequest) Reset() {
	*x = PollingDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingDeleteRequest) ProtoMessage() {}

func (x *PollingDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingDeleteRequest.ProtoReflect.Descriptor instead.
func (*PollingDeleteRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{10}
}

func (x *PollingDeleteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PollingDeleteRequest) GetSoftDelete() bool {
	if x != nil {
		return x.SoftDelete
	}
	return false
}

type PollingDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Polling `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PollingDeleteResponse) Reset() {
	*x = PollingDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_polling_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PollingDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PollingDeleteResponse) ProtoMessage() {}

func (x *PollingDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_polling_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PollingDeleteResponse.ProtoReflect.Descriptor instead.
func (*PollingDeleteResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_polling_proto_rawDescGZIP(), []int{11}
}

func (x *PollingDeleteResponse) GetData() *Polling {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_contents_v1_polling_proto protoreflect.FileDescriptor

var file_contents_v1_polling_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xde, 0x05, 0x0a, 0x07, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55,
	0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x12, 0x2d, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x5f, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x31, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x24, 0x0a, 0x0e, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x32, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x13, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x32, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x31, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x3e, 0x0a, 0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x32, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0e, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0xcd, 0x03, 0x0a, 0x13, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61,
	0x6c, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x5f, 0x31, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x31, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2d, 0x0a,
	0x13, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x31, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x31, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x5f, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x32, 0x5f, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x32, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x13, 0x69, 0x73, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x41, 0x74, 0x22, 0x26, 0x0a, 0x14, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67,
	0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a,
	0x15, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x70,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x22, 0xcb, 0x02, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x75, 0x6c,
	0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x65, 0x72,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x73,
	0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x22, 0x55, 0x0a,
	0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x12, 0x4e, 0x45, 0x57, 0x45, 0x53, 0x54, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x4f, 0x4c, 0x44, 0x45, 0x53, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x54, 0x49, 0x54,
	0x4c, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x14,
	0x0a, 0x10, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49,
	0x4e, 0x47, 0x10, 0x03, 0x22, 0x73, 0x0a, 0x16, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x47,
	0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x6c, 0x69,
	0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x14, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f,
	0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x14, 0x50,
	0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6c, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0xa3, 0x01, 0x0a, 0x0d, 0x50, 0x6f, 0x6c, 0x6c,
	0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x22, 0x0a, 0x1e, 0x50, 0x4f, 0x4c,
	0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x41, 0x4c, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x18, 0x0a,
	0x14, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x4f, 0x4c, 0x4c, 0x49,
	0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x54, 0x52, 0x41, 0x53, 0x48, 0x10,
	0x02, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x03, 0x12, 0x1e, 0x0a,
	0x1a, 0x50, 0x4f, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4f, 0x4f, 0x4e, 0x10, 0x04, 0x42, 0x49, 0x5a,
	0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x76, 0x70, 0x2d,
	0x64, 0x65, 0x76, 0x2f, 0x6d, 0x61, 0x74, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x2d, 0x67, 0x72, 0x70,
	0x63, 0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contents_v1_polling_proto_rawDescOnce sync.Once
	file_contents_v1_polling_proto_rawDescData = file_contents_v1_polling_proto_rawDesc
)

func file_contents_v1_polling_proto_rawDescGZIP() []byte {
	file_contents_v1_polling_proto_rawDescOnce.Do(func() {
		file_contents_v1_polling_proto_rawDescData = protoimpl.X.CompressGZIP(file_contents_v1_polling_proto_rawDescData)
	})
	return file_contents_v1_polling_proto_rawDescData
}

var file_contents_v1_polling_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_contents_v1_polling_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_contents_v1_polling_proto_goTypes = []interface{}{
	(PollingStatus)(0),              // 0: contents.v1.PollingStatus
	(PollingGetListRequest_Sort)(0), // 1: contents.v1.PollingGetListRequest.Sort
	(*Polling)(nil),                 // 2: contents.v1.Polling
	(*PollingCreateUpdate)(nil),     // 3: contents.v1.PollingCreateUpdate
	(*PollingGetOneRequest)(nil),    // 4: contents.v1.PollingGetOneRequest
	(*PollingGetOneResponse)(nil),   // 5: contents.v1.PollingGetOneResponse
	(*PollingGetListRequest)(nil),   // 6: contents.v1.PollingGetListRequest
	(*PollingGetListResponse)(nil),  // 7: contents.v1.PollingGetListResponse
	(*PollingCreateRequest)(nil),    // 8: contents.v1.PollingCreateRequest
	(*PollingCreateResponse)(nil),   // 9: contents.v1.PollingCreateResponse
	(*PollingUpdateRequest)(nil),    // 10: contents.v1.PollingUpdateRequest
	(*PollingUpdateResponse)(nil),   // 11: contents.v1.PollingUpdateResponse
	(*PollingDeleteRequest)(nil),    // 12: contents.v1.PollingDeleteRequest
	(*PollingDeleteResponse)(nil),   // 13: contents.v1.PollingDeleteResponse
	(*timestamppb.Timestamp)(nil),   // 14: google.protobuf.Timestamp
	(*Article)(nil),                 // 15: contents.v1.Article
}
var file_contents_v1_polling_proto_depIdxs = []int32{
	0,  // 0: contents.v1.Polling.status:type_name -> contents.v1.PollingStatus
	14, // 1: contents.v1.Polling.created_at:type_name -> google.protobuf.Timestamp
	14, // 2: contents.v1.Polling.updated_at:type_name -> google.protobuf.Timestamp
	14, // 3: contents.v1.Polling.published_at:type_name -> google.protobuf.Timestamp
	15, // 4: contents.v1.Polling.choice_1_article:type_name -> contents.v1.Article
	15, // 5: contents.v1.Polling.choice_2_article:type_name -> contents.v1.Article
	0,  // 6: contents.v1.PollingCreateUpdate.status:type_name -> contents.v1.PollingStatus
	14, // 7: contents.v1.PollingCreateUpdate.published_at:type_name -> google.protobuf.Timestamp
	2,  // 8: contents.v1.PollingGetOneResponse.polling:type_name -> contents.v1.Polling
	0,  // 9: contents.v1.PollingGetListRequest.status_multiple:type_name -> contents.v1.PollingStatus
	1,  // 10: contents.v1.PollingGetListRequest.sort_by:type_name -> contents.v1.PollingGetListRequest.Sort
	2,  // 11: contents.v1.PollingGetListResponse.data:type_name -> contents.v1.Polling
	3,  // 12: contents.v1.PollingCreateRequest.data:type_name -> contents.v1.PollingCreateUpdate
	2,  // 13: contents.v1.PollingCreateResponse.data:type_name -> contents.v1.Polling
	3,  // 14: contents.v1.PollingUpdateRequest.data:type_name -> contents.v1.PollingCreateUpdate
	2,  // 15: contents.v1.PollingUpdateResponse.data:type_name -> contents.v1.Polling
	2,  // 16: contents.v1.PollingDeleteResponse.data:type_name -> contents.v1.Polling
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_contents_v1_polling_proto_init() }
func file_contents_v1_polling_proto_init() {
	if File_contents_v1_polling_proto != nil {
		return
	}
	file_contents_v1_article_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contents_v1_polling_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Polling); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingCreateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingGetOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingGetOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_polling_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PollingDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contents_v1_polling_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contents_v1_polling_proto_goTypes,
		DependencyIndexes: file_contents_v1_polling_proto_depIdxs,
		EnumInfos:         file_contents_v1_polling_proto_enumTypes,
		MessageInfos:      file_contents_v1_polling_proto_msgTypes,
	}.Build()
	File_contents_v1_polling_proto = out.File
	file_contents_v1_polling_proto_rawDesc = nil
	file_contents_v1_polling_proto_goTypes = nil
	file_contents_v1_polling_proto_depIdxs = nil
}
