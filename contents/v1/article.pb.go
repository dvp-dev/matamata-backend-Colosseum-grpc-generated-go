// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.2
// source: contents/v1/article.proto

package contents_grpc

import (
	v1 "github.com/dvp-dev/matamata-grpc-generated-go/admin/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ArticleStatus int32

const (
	ArticleStatus_ALL_UNSPECIFIED ArticleStatus = 0
	ArticleStatus_DRAFT           ArticleStatus = 1
	ArticleStatus_TRASH           ArticleStatus = 2
	ArticleStatus_PUBLISH         ArticleStatus = 3
	ArticleStatus_COMING_SOON     ArticleStatus = 4
)

// Enum value maps for ArticleStatus.
var (
	ArticleStatus_name = map[int32]string{
		0: "ALL_UNSPECIFIED",
		1: "DRAFT",
		2: "TRASH",
		3: "PUBLISH",
		4: "COMING_SOON",
	}
	ArticleStatus_value = map[string]int32{
		"ALL_UNSPECIFIED": 0,
		"DRAFT":           1,
		"TRASH":           2,
		"PUBLISH":         3,
		"COMING_SOON":     4,
	}
)

func (x ArticleStatus) Enum() *ArticleStatus {
	p := new(ArticleStatus)
	*p = x
	return p
}

func (x ArticleStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_article_proto_enumTypes[0].Descriptor()
}

func (ArticleStatus) Type() protoreflect.EnumType {
	return &file_contents_v1_article_proto_enumTypes[0]
}

func (x ArticleStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleStatus.Descriptor instead.
func (ArticleStatus) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{0}
}

type ArticleType int32

const (
	// this type work for messages in article.proto (this file)
	ArticleType_ARTICLE_TYPE_ARTICLE_UNSPECIFIED ArticleType = 0
	ArticleType_ARTICLE_TYPE_POLITIK_INDONESIA   ArticleType = 6
	ArticleType_ARTICLE_TYPE_ANALISIS            ArticleType = 7
	ArticleType_ARTICLE_TYPE_OPINI               ArticleType = 8
	ArticleType_ARTICLE_TYPE_SEJARAH             ArticleType = 9
	ArticleType_ARTICLE_TYPE_BELAJAR_POLITIK     ArticleType = 10
	ArticleType_ARTICLE_TYPE_MILITER             ArticleType = 11
	// this type work for messages in infografik.proto
	ArticleType_ARTICLE_TYPE_INFOGRAFIK ArticleType = 3
	// this type work for messages in news_video.proto
	ArticleType_ARTICLE_TYPE_BERITA_VIDEO ArticleType = 2
	ArticleType_ARTICLE_TYPE_INTERUPSI    ArticleType = 5
	// this type work for messages in news_photo.proto
	ArticleType_ARTICLE_TYPE_BERITA_FOTO ArticleType = 1
	ArticleType_ARTICLE_TYPE_CEK_FAKTA   ArticleType = 4
)

// Enum value maps for ArticleType.
var (
	ArticleType_name = map[int32]string{
		0:  "ARTICLE_TYPE_ARTICLE_UNSPECIFIED",
		6:  "ARTICLE_TYPE_POLITIK_INDONESIA",
		7:  "ARTICLE_TYPE_ANALISIS",
		8:  "ARTICLE_TYPE_OPINI",
		9:  "ARTICLE_TYPE_SEJARAH",
		10: "ARTICLE_TYPE_BELAJAR_POLITIK",
		11: "ARTICLE_TYPE_MILITER",
		3:  "ARTICLE_TYPE_INFOGRAFIK",
		2:  "ARTICLE_TYPE_BERITA_VIDEO",
		5:  "ARTICLE_TYPE_INTERUPSI",
		1:  "ARTICLE_TYPE_BERITA_FOTO",
		4:  "ARTICLE_TYPE_CEK_FAKTA",
	}
	ArticleType_value = map[string]int32{
		"ARTICLE_TYPE_ARTICLE_UNSPECIFIED": 0,
		"ARTICLE_TYPE_POLITIK_INDONESIA":   6,
		"ARTICLE_TYPE_ANALISIS":            7,
		"ARTICLE_TYPE_OPINI":               8,
		"ARTICLE_TYPE_SEJARAH":             9,
		"ARTICLE_TYPE_BELAJAR_POLITIK":     10,
		"ARTICLE_TYPE_MILITER":             11,
		"ARTICLE_TYPE_INFOGRAFIK":          3,
		"ARTICLE_TYPE_BERITA_VIDEO":        2,
		"ARTICLE_TYPE_INTERUPSI":           5,
		"ARTICLE_TYPE_BERITA_FOTO":         1,
		"ARTICLE_TYPE_CEK_FAKTA":           4,
	}
)

func (x ArticleType) Enum() *ArticleType {
	p := new(ArticleType)
	*p = x
	return p
}

func (x ArticleType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleType) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_article_proto_enumTypes[1].Descriptor()
}

func (ArticleType) Type() protoreflect.EnumType {
	return &file_contents_v1_article_proto_enumTypes[1]
}

func (x ArticleType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleType.Descriptor instead.
func (ArticleType) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{1}
}

type ArticleSectionHomepage int32

const (
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED        ArticleSectionHomepage = 0
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_NONE                   ArticleSectionHomepage = 1
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_SPECIAL_ISSUE          ArticleSectionHomepage = 2
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_BERITA_INTERNASIONAL   ArticleSectionHomepage = 3
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_INDONESIA_DIMATA_DUNIA ArticleSectionHomepage = 4
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_HEADLINE               ArticleSectionHomepage = 5
	ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_BERITA_PILIHAN         ArticleSectionHomepage = 6
)

// Enum value maps for ArticleSectionHomepage.
var (
	ArticleSectionHomepage_name = map[int32]string{
		0: "ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED",
		1: "ARTICLE_SECTION_HOMEPAGE_NONE",
		2: "ARTICLE_SECTION_HOMEPAGE_SPECIAL_ISSUE",
		3: "ARTICLE_SECTION_HOMEPAGE_BERITA_INTERNASIONAL",
		4: "ARTICLE_SECTION_HOMEPAGE_INDONESIA_DIMATA_DUNIA",
		5: "ARTICLE_SECTION_HOMEPAGE_HEADLINE",
		6: "ARTICLE_SECTION_HOMEPAGE_BERITA_PILIHAN",
	}
	ArticleSectionHomepage_value = map[string]int32{
		"ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED":        0,
		"ARTICLE_SECTION_HOMEPAGE_NONE":                   1,
		"ARTICLE_SECTION_HOMEPAGE_SPECIAL_ISSUE":          2,
		"ARTICLE_SECTION_HOMEPAGE_BERITA_INTERNASIONAL":   3,
		"ARTICLE_SECTION_HOMEPAGE_INDONESIA_DIMATA_DUNIA": 4,
		"ARTICLE_SECTION_HOMEPAGE_HEADLINE":               5,
		"ARTICLE_SECTION_HOMEPAGE_BERITA_PILIHAN":         6,
	}
)

func (x ArticleSectionHomepage) Enum() *ArticleSectionHomepage {
	p := new(ArticleSectionHomepage)
	*p = x
	return p
}

func (x ArticleSectionHomepage) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleSectionHomepage) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_article_proto_enumTypes[2].Descriptor()
}

func (ArticleSectionHomepage) Type() protoreflect.EnumType {
	return &file_contents_v1_article_proto_enumTypes[2]
}

func (x ArticleSectionHomepage) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleSectionHomepage.Descriptor instead.
func (ArticleSectionHomepage) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{2}
}

type ArticleCreditRole int32

const (
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_PENULIS_UNSPECIFIED ArticleCreditRole = 0
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_PENERJEMAH          ArticleCreditRole = 1
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_PHOTOGRAFER         ArticleCreditRole = 2
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_DESAINER_GRAFIS     ArticleCreditRole = 3
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_EDITOR              ArticleCreditRole = 4
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_SUARA               ArticleCreditRole = 5
	ArticleCreditRole_ARTICLE_CREDIT_ROLE_VIDEOGRAFER         ArticleCreditRole = 6
)

// Enum value maps for ArticleCreditRole.
var (
	ArticleCreditRole_name = map[int32]string{
		0: "ARTICLE_CREDIT_ROLE_PENULIS_UNSPECIFIED",
		1: "ARTICLE_CREDIT_ROLE_PENERJEMAH",
		2: "ARTICLE_CREDIT_ROLE_PHOTOGRAFER",
		3: "ARTICLE_CREDIT_ROLE_DESAINER_GRAFIS",
		4: "ARTICLE_CREDIT_ROLE_EDITOR",
		5: "ARTICLE_CREDIT_ROLE_SUARA",
		6: "ARTICLE_CREDIT_ROLE_VIDEOGRAFER",
	}
	ArticleCreditRole_value = map[string]int32{
		"ARTICLE_CREDIT_ROLE_PENULIS_UNSPECIFIED": 0,
		"ARTICLE_CREDIT_ROLE_PENERJEMAH":          1,
		"ARTICLE_CREDIT_ROLE_PHOTOGRAFER":         2,
		"ARTICLE_CREDIT_ROLE_DESAINER_GRAFIS":     3,
		"ARTICLE_CREDIT_ROLE_EDITOR":              4,
		"ARTICLE_CREDIT_ROLE_SUARA":               5,
		"ARTICLE_CREDIT_ROLE_VIDEOGRAFER":         6,
	}
)

func (x ArticleCreditRole) Enum() *ArticleCreditRole {
	p := new(ArticleCreditRole)
	*p = x
	return p
}

func (x ArticleCreditRole) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleCreditRole) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_article_proto_enumTypes[3].Descriptor()
}

func (ArticleCreditRole) Type() protoreflect.EnumType {
	return &file_contents_v1_article_proto_enumTypes[3]
}

func (x ArticleCreditRole) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleCreditRole.Descriptor instead.
func (ArticleCreditRole) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{3}
}

type ArticleGetListRequest_Sort int32

const (
	ArticleGetListRequest_TITLE_ASCENDING_UNSPECIFIED ArticleGetListRequest_Sort = 0
	ArticleGetListRequest_TITLE_DESCENDING            ArticleGetListRequest_Sort = 1
	ArticleGetListRequest_OLDEST                      ArticleGetListRequest_Sort = 2
	ArticleGetListRequest_NEWEST                      ArticleGetListRequest_Sort = 3
)

// Enum value maps for ArticleGetListRequest_Sort.
var (
	ArticleGetListRequest_Sort_name = map[int32]string{
		0: "TITLE_ASCENDING_UNSPECIFIED",
		1: "TITLE_DESCENDING",
		2: "OLDEST",
		3: "NEWEST",
	}
	ArticleGetListRequest_Sort_value = map[string]int32{
		"TITLE_ASCENDING_UNSPECIFIED": 0,
		"TITLE_DESCENDING":            1,
		"OLDEST":                      2,
		"NEWEST":                      3,
	}
)

func (x ArticleGetListRequest_Sort) Enum() *ArticleGetListRequest_Sort {
	p := new(ArticleGetListRequest_Sort)
	*p = x
	return p
}

func (x ArticleGetListRequest_Sort) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ArticleGetListRequest_Sort) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_article_proto_enumTypes[4].Descriptor()
}

func (ArticleGetListRequest_Sort) Type() protoreflect.EnumType {
	return &file_contents_v1_article_proto_enumTypes[4]
}

func (x ArticleGetListRequest_Sort) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ArticleGetListRequest_Sort.Descriptor instead.
func (ArticleGetListRequest_Sort) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{7, 0}
}

type ArticleCredit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role  ArticleCreditRole `protobuf:"varint,1,opt,name=role,proto3,enum=contents.v1.ArticleCreditRole" json:"role,omitempty"`
	Admin *v1.Admin         `protobuf:"bytes,2,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *ArticleCredit) Reset() {
	*x = ArticleCredit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCredit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCredit) ProtoMessage() {}

func (x *ArticleCredit) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCredit.ProtoReflect.Descriptor instead.
func (*ArticleCredit) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{0}
}

func (x *ArticleCredit) GetRole() ArticleCreditRole {
	if x != nil {
		return x.Role
	}
	return ArticleCreditRole_ARTICLE_CREDIT_ROLE_PENULIS_UNSPECIFIED
}

func (x *ArticleCredit) GetAdmin() *v1.Admin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type ArticleCreditCreateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role    ArticleCreditRole `protobuf:"varint,1,opt,name=role,proto3,enum=contents.v1.ArticleCreditRole" json:"role,omitempty"`
	AdminId int32             `protobuf:"varint,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
}

func (x *ArticleCreditCreateUpdate) Reset() {
	*x = ArticleCreditCreateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreditCreateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreditCreateUpdate) ProtoMessage() {}

func (x *ArticleCreditCreateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreditCreateUpdate.ProtoReflect.Descriptor instead.
func (*ArticleCreditCreateUpdate) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleCreditCreateUpdate) GetRole() ArticleCreditRole {
	if x != nil {
		return x.Role
	}
	return ArticleCreditRole_ARTICLE_CREDIT_ROLE_PENULIS_UNSPECIFIED
}

func (x *ArticleCreditCreateUpdate) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

type ArticleSEO struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title                             string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Slug                              string `protobuf:"bytes,2,opt,name=slug,proto3" json:"slug,omitempty"`
	MetaDescription                   string `protobuf:"bytes,3,opt,name=meta_description,json=metaDescription,proto3" json:"meta_description,omitempty"`
	SearchEngineShowThisPost          bool   `protobuf:"varint,4,opt,name=search_engine_show_this_post,json=searchEngineShowThisPost,proto3" json:"search_engine_show_this_post,omitempty"`
	SearchEngineFollowLinksOnThisPost bool   `protobuf:"varint,5,opt,name=search_engine_follow_links_on_this_post,json=searchEngineFollowLinksOnThisPost,proto3" json:"search_engine_follow_links_on_this_post,omitempty"`
}

func (x *ArticleSEO) Reset() {
	*x = ArticleSEO{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleSEO) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleSEO) ProtoMessage() {}

func (x *ArticleSEO) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleSEO.ProtoReflect.Descriptor instead.
func (*ArticleSEO) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{2}
}

func (x *ArticleSEO) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleSEO) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *ArticleSEO) GetMetaDescription() string {
	if x != nil {
		return x.MetaDescription
	}
	return ""
}

func (x *ArticleSEO) GetSearchEngineShowThisPost() bool {
	if x != nil {
		return x.SearchEngineShowThisPost
	}
	return false
}

func (x *ArticleSEO) GetSearchEngineFollowLinksOnThisPost() bool {
	if x != nil {
		return x.SearchEngineFollowLinksOnThisPost
	}
	return false
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CategoryId_1      int32                  `protobuf:"varint,2,opt,name=category_id_1,json=categoryId1,proto3" json:"category_id_1,omitempty"`
	CategoryId_2      int32                  `protobuf:"varint,3,opt,name=category_id_2,json=categoryId2,proto3" json:"category_id_2,omitempty"`
	CategoryId_3      int32                  `protobuf:"varint,4,opt,name=category_id_3,json=categoryId3,proto3" json:"category_id_3,omitempty"`
	Title             string                 `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Lead              string                 `protobuf:"bytes,6,opt,name=lead,proto3" json:"lead,omitempty"`
	Content           string                 `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	ImageCoverUrl     string                 `protobuf:"bytes,8,opt,name=image_cover_url,json=imageCoverUrl,proto3" json:"image_cover_url,omitempty"`
	ImageCoverCaption string                 `protobuf:"bytes,9,opt,name=image_cover_caption,json=imageCoverCaption,proto3" json:"image_cover_caption,omitempty"`
	ImageCoverAlt     string                 `protobuf:"bytes,18,opt,name=image_cover_alt,json=imageCoverAlt,proto3" json:"image_cover_alt,omitempty"`
	Slug              string                 `protobuf:"bytes,14,opt,name=slug,proto3" json:"slug,omitempty"`
	Energy            int32                  `protobuf:"varint,16,opt,name=energy,proto3" json:"energy,omitempty"`
	Type              ArticleType            `protobuf:"varint,17,opt,name=type,proto3,enum=contents.v1.ArticleType" json:"type,omitempty"`
	Status            ArticleStatus          `protobuf:"varint,10,opt,name=status,proto3,enum=contents.v1.ArticleStatus" json:"status,omitempty"`
	SectionHomepage   ArticleSectionHomepage `protobuf:"varint,13,opt,name=section_homepage,json=sectionHomepage,proto3,enum=contents.v1.ArticleSectionHomepage" json:"section_homepage,omitempty"`
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	PublishedAt       *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Tags              []*Tag                 `protobuf:"bytes,51,rep,name=tags,proto3" json:"tags,omitempty"`
	Category1         *Category1             `protobuf:"bytes,52,opt,name=category1,proto3" json:"category1,omitempty"`
	Category2         *Category2             `protobuf:"bytes,53,opt,name=category2,proto3" json:"category2,omitempty"`
	Category3         *Category3             `protobuf:"bytes,54,opt,name=category3,proto3" json:"category3,omitempty"`
	Seo               *ArticleSEO            `protobuf:"bytes,55,opt,name=seo,proto3" json:"seo,omitempty"`
	Credits           []*ArticleCredit       `protobuf:"bytes,101,rep,name=credits,proto3" json:"credits,omitempty"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{3}
}

func (x *Article) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetCategoryId_1() int32 {
	if x != nil {
		return x.CategoryId_1
	}
	return 0
}

func (x *Article) GetCategoryId_2() int32 {
	if x != nil {
		return x.CategoryId_2
	}
	return 0
}

func (x *Article) GetCategoryId_3() int32 {
	if x != nil {
		return x.CategoryId_3
	}
	return 0
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetLead() string {
	if x != nil {
		return x.Lead
	}
	return ""
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Article) GetImageCoverUrl() string {
	if x != nil {
		return x.ImageCoverUrl
	}
	return ""
}

func (x *Article) GetImageCoverCaption() string {
	if x != nil {
		return x.ImageCoverCaption
	}
	return ""
}

func (x *Article) GetImageCoverAlt() string {
	if x != nil {
		return x.ImageCoverAlt
	}
	return ""
}

func (x *Article) GetSlug() string {
	if x != nil {
		return x.Slug
	}
	return ""
}

func (x *Article) GetEnergy() int32 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *Article) GetType() ArticleType {
	if x != nil {
		return x.Type
	}
	return ArticleType_ARTICLE_TYPE_ARTICLE_UNSPECIFIED
}

func (x *Article) GetStatus() ArticleStatus {
	if x != nil {
		return x.Status
	}
	return ArticleStatus_ALL_UNSPECIFIED
}

func (x *Article) GetSectionHomepage() ArticleSectionHomepage {
	if x != nil {
		return x.SectionHomepage
	}
	return ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED
}

func (x *Article) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Article) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Article) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Article) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Article) GetCategory1() *Category1 {
	if x != nil {
		return x.Category1
	}
	return nil
}

func (x *Article) GetCategory2() *Category2 {
	if x != nil {
		return x.Category2
	}
	return nil
}

func (x *Article) GetCategory3() *Category3 {
	if x != nil {
		return x.Category3
	}
	return nil
}

func (x *Article) GetSeo() *ArticleSEO {
	if x != nil {
		return x.Seo
	}
	return nil
}

func (x *Article) GetCredits() []*ArticleCredit {
	if x != nil {
		return x.Credits
	}
	return nil
}

type ArticleCreateUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CategoryId_1        int32                        `protobuf:"varint,2,opt,name=category_id_1,json=categoryId1,proto3" json:"category_id_1,omitempty"`
	CategoryId_2        int32                        `protobuf:"varint,3,opt,name=category_id_2,json=categoryId2,proto3" json:"category_id_2,omitempty"`
	CategoryId_3        int32                        `protobuf:"varint,4,opt,name=category_id_3,json=categoryId3,proto3" json:"category_id_3,omitempty"`
	Title               string                       `protobuf:"bytes,5,opt,name=title,proto3" json:"title,omitempty"`
	Lead                string                       `protobuf:"bytes,6,opt,name=lead,proto3" json:"lead,omitempty"`
	Content             string                       `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"`
	ImageCoverUrl       string                       `protobuf:"bytes,8,opt,name=image_cover_url,json=imageCoverUrl,proto3" json:"image_cover_url,omitempty"`
	ImageCoverCaption   string                       `protobuf:"bytes,9,opt,name=image_cover_caption,json=imageCoverCaption,proto3" json:"image_cover_caption,omitempty"`
	ImageCoverAlt       string                       `protobuf:"bytes,18,opt,name=image_cover_alt,json=imageCoverAlt,proto3" json:"image_cover_alt,omitempty"`
	Energy              int32                        `protobuf:"varint,11,opt,name=energy,proto3" json:"energy,omitempty"`
	Type                ArticleType                  `protobuf:"varint,12,opt,name=type,proto3,enum=contents.v1.ArticleType" json:"type,omitempty"`
	Status              ArticleStatus                `protobuf:"varint,10,opt,name=status,proto3,enum=contents.v1.ArticleStatus" json:"status,omitempty"`
	SectionHomepage     ArticleSectionHomepage       `protobuf:"varint,13,opt,name=section_homepage,json=sectionHomepage,proto3,enum=contents.v1.ArticleSectionHomepage" json:"section_homepage,omitempty"`
	IsCustomPublishedAt bool                         `protobuf:"varint,14,opt,name=is_custom_published_at,json=isCustomPublishedAt,proto3" json:"is_custom_published_at,omitempty"`
	PublishedAt         *timestamppb.Timestamp       `protobuf:"bytes,15,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	Seo                 *ArticleSEO                  `protobuf:"bytes,53,opt,name=seo,proto3" json:"seo,omitempty"`
	TagIds              []int32                      `protobuf:"varint,51,rep,packed,name=tag_ids,json=tagIds,proto3" json:"tag_ids,omitempty"`
	Credits             []*ArticleCreditCreateUpdate `protobuf:"bytes,52,rep,name=credits,proto3" json:"credits,omitempty"`
}

func (x *ArticleCreateUpdate) Reset() {
	*x = ArticleCreateUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreateUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreateUpdate) ProtoMessage() {}

func (x *ArticleCreateUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreateUpdate.ProtoReflect.Descriptor instead.
func (*ArticleCreateUpdate) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{4}
}

func (x *ArticleCreateUpdate) GetCategoryId_1() int32 {
	if x != nil {
		return x.CategoryId_1
	}
	return 0
}

func (x *ArticleCreateUpdate) GetCategoryId_2() int32 {
	if x != nil {
		return x.CategoryId_2
	}
	return 0
}

func (x *ArticleCreateUpdate) GetCategoryId_3() int32 {
	if x != nil {
		return x.CategoryId_3
	}
	return 0
}

func (x *ArticleCreateUpdate) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleCreateUpdate) GetLead() string {
	if x != nil {
		return x.Lead
	}
	return ""
}

func (x *ArticleCreateUpdate) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticleCreateUpdate) GetImageCoverUrl() string {
	if x != nil {
		return x.ImageCoverUrl
	}
	return ""
}

func (x *ArticleCreateUpdate) GetImageCoverCaption() string {
	if x != nil {
		return x.ImageCoverCaption
	}
	return ""
}

func (x *ArticleCreateUpdate) GetImageCoverAlt() string {
	if x != nil {
		return x.ImageCoverAlt
	}
	return ""
}

func (x *ArticleCreateUpdate) GetEnergy() int32 {
	if x != nil {
		return x.Energy
	}
	return 0
}

func (x *ArticleCreateUpdate) GetType() ArticleType {
	if x != nil {
		return x.Type
	}
	return ArticleType_ARTICLE_TYPE_ARTICLE_UNSPECIFIED
}

func (x *ArticleCreateUpdate) GetStatus() ArticleStatus {
	if x != nil {
		return x.Status
	}
	return ArticleStatus_ALL_UNSPECIFIED
}

func (x *ArticleCreateUpdate) GetSectionHomepage() ArticleSectionHomepage {
	if x != nil {
		return x.SectionHomepage
	}
	return ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED
}

func (x *ArticleCreateUpdate) GetIsCustomPublishedAt() bool {
	if x != nil {
		return x.IsCustomPublishedAt
	}
	return false
}

func (x *ArticleCreateUpdate) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *ArticleCreateUpdate) GetSeo() *ArticleSEO {
	if x != nil {
		return x.Seo
	}
	return nil
}

func (x *ArticleCreateUpdate) GetTagIds() []int32 {
	if x != nil {
		return x.TagIds
	}
	return nil
}

func (x *ArticleCreateUpdate) GetCredits() []*ArticleCreditCreateUpdate {
	if x != nil {
		return x.Credits
	}
	return nil
}

type ArticleGetOneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SearchBySlug string `protobuf:"bytes,2,opt,name=search_by_slug,json=searchBySlug,proto3" json:"search_by_slug,omitempty"`
}

func (x *ArticleGetOneRequest) Reset() {
	*x = ArticleGetOneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleGetOneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleGetOneRequest) ProtoMessage() {}

func (x *ArticleGetOneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleGetOneRequest.ProtoReflect.Descriptor instead.
func (*ArticleGetOneRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{5}
}

func (x *ArticleGetOneRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleGetOneRequest) GetSearchBySlug() string {
	if x != nil {
		return x.SearchBySlug
	}
	return ""
}

type ArticleGetOneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Article *Article `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
}

func (x *ArticleGetOneResponse) Reset() {
	*x = ArticleGetOneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleGetOneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleGetOneResponse) ProtoMessage() {}

func (x *ArticleGetOneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleGetOneResponse.ProtoReflect.Descriptor instead.
func (*ArticleGetOneResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{6}
}

func (x *ArticleGetOneResponse) GetArticle() *Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type ArticleGetListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          ArticleStatus              `protobuf:"varint,1,opt,name=status,proto3,enum=contents.v1.ArticleStatus" json:"status,omitempty"`
	StatusMultiple  []ArticleStatus            `protobuf:"varint,9,rep,packed,name=status_multiple,json=statusMultiple,proto3,enum=contents.v1.ArticleStatus" json:"status_multiple,omitempty"`
	Type            ArticleType                `protobuf:"varint,12,opt,name=type,proto3,enum=contents.v1.ArticleType" json:"type,omitempty"`
	Types           []ArticleType              `protobuf:"varint,11,rep,packed,name=types,proto3,enum=contents.v1.ArticleType" json:"types,omitempty"`
	SectionHomepage ArticleSectionHomepage     `protobuf:"varint,10,opt,name=section_homepage,json=sectionHomepage,proto3,enum=contents.v1.ArticleSectionHomepage" json:"section_homepage,omitempty"`
	CategoryId_1    int32                      `protobuf:"varint,2,opt,name=category_id_1,json=categoryId1,proto3" json:"category_id_1,omitempty"`
	CategoryId_2    int32                      `protobuf:"varint,3,opt,name=category_id_2,json=categoryId2,proto3" json:"category_id_2,omitempty"`
	CategoryId_3    int32                      `protobuf:"varint,4,opt,name=category_id_3,json=categoryId3,proto3" json:"category_id_3,omitempty"`
	Search          string                     `protobuf:"bytes,6,opt,name=search,proto3" json:"search,omitempty"`
	Page            int32                      `protobuf:"varint,7,opt,name=page,proto3" json:"page,omitempty"`
	ContentPerPage  int32                      `protobuf:"varint,8,opt,name=content_per_page,json=contentPerPage,proto3" json:"content_per_page,omitempty"`
	SortBy          ArticleGetListRequest_Sort `protobuf:"varint,5,opt,name=sort_by,json=sortBy,proto3,enum=contents.v1.ArticleGetListRequest_Sort" json:"sort_by,omitempty"`
}

func (x *ArticleGetListRequest) Reset() {
	*x = ArticleGetListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleGetListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleGetListRequest) ProtoMessage() {}

func (x *ArticleGetListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleGetListRequest.ProtoReflect.Descriptor instead.
func (*ArticleGetListRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{7}
}

func (x *ArticleGetListRequest) GetStatus() ArticleStatus {
	if x != nil {
		return x.Status
	}
	return ArticleStatus_ALL_UNSPECIFIED
}

func (x *ArticleGetListRequest) GetStatusMultiple() []ArticleStatus {
	if x != nil {
		return x.StatusMultiple
	}
	return nil
}

func (x *ArticleGetListRequest) GetType() ArticleType {
	if x != nil {
		return x.Type
	}
	return ArticleType_ARTICLE_TYPE_ARTICLE_UNSPECIFIED
}

func (x *ArticleGetListRequest) GetTypes() []ArticleType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *ArticleGetListRequest) GetSectionHomepage() ArticleSectionHomepage {
	if x != nil {
		return x.SectionHomepage
	}
	return ArticleSectionHomepage_ARTICLE_SECTION_HOMEPAGE_ALL_UNSPECIFIED
}

func (x *ArticleGetListRequest) GetCategoryId_1() int32 {
	if x != nil {
		return x.CategoryId_1
	}
	return 0
}

func (x *ArticleGetListRequest) GetCategoryId_2() int32 {
	if x != nil {
		return x.CategoryId_2
	}
	return 0
}

func (x *ArticleGetListRequest) GetCategoryId_3() int32 {
	if x != nil {
		return x.CategoryId_3
	}
	return 0
}

func (x *ArticleGetListRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *ArticleGetListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ArticleGetListRequest) GetContentPerPage() int32 {
	if x != nil {
		return x.ContentPerPage
	}
	return 0
}

func (x *ArticleGetListRequest) GetSortBy() ArticleGetListRequest_Sort {
	if x != nil {
		return x.SortBy
	}
	return ArticleGetListRequest_TITLE_ASCENDING_UNSPECIFIED
}

type ArticleGetListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Article `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	MaxPage int32      `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Count   int32      `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ArticleGetListResponse) Reset() {
	*x = ArticleGetListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleGetListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleGetListResponse) ProtoMessage() {}

func (x *ArticleGetListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleGetListResponse.ProtoReflect.Descriptor instead.
func (*ArticleGetListResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{8}
}

func (x *ArticleGetListResponse) GetData() []*Article {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ArticleGetListResponse) GetMaxPage() int32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *ArticleGetListResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ArticleGetListStreamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    *Article `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	MaxPage int32    `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Count   int32    `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *ArticleGetListStreamResponse) Reset() {
	*x = ArticleGetListStreamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleGetListStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleGetListStreamResponse) ProtoMessage() {}

func (x *ArticleGetListStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleGetListStreamResponse.ProtoReflect.Descriptor instead.
func (*ArticleGetListStreamResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{9}
}

func (x *ArticleGetListStreamResponse) GetData() *Article {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ArticleGetListStreamResponse) GetMaxPage() int32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *ArticleGetListStreamResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ArticleCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *ArticleCreateUpdate `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleCreateRequest) Reset() {
	*x = ArticleCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreateRequest) ProtoMessage() {}

func (x *ArticleCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreateRequest.ProtoReflect.Descriptor instead.
func (*ArticleCreateRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleCreateRequest) GetData() *ArticleCreateUpdate {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleCreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Article `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleCreateResponse) Reset() {
	*x = ArticleCreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleCreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleCreateResponse) ProtoMessage() {}

func (x *ArticleCreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleCreateResponse.ProtoReflect.Descriptor instead.
func (*ArticleCreateResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{11}
}

func (x *ArticleCreateResponse) GetData() *Article {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleUpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *ArticleCreateUpdate `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleUpdateRequest) Reset() {
	*x = ArticleUpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUpdateRequest) ProtoMessage() {}

func (x *ArticleUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUpdateRequest.ProtoReflect.Descriptor instead.
func (*ArticleUpdateRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{12}
}

func (x *ArticleUpdateRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleUpdateRequest) GetData() *ArticleCreateUpdate {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Article `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleUpdateResponse) Reset() {
	*x = ArticleUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleUpdateResponse) ProtoMessage() {}

func (x *ArticleUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleUpdateResponse.ProtoReflect.Descriptor instead.
func (*ArticleUpdateResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{13}
}

func (x *ArticleUpdateResponse) GetData() *Article {
	if x != nil {
		return x.Data
	}
	return nil
}

type ArticleDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SoftDelete bool  `protobuf:"varint,2,opt,name=soft_delete,json=softDelete,proto3" json:"soft_delete,omitempty"`
}

func (x *ArticleDeleteRequest) Reset() {
	*x = ArticleDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDeleteRequest) ProtoMessage() {}

func (x *ArticleDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDeleteRequest.ProtoReflect.Descriptor instead.
func (*ArticleDeleteRequest) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{14}
}

func (x *ArticleDeleteRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleDeleteRequest) GetSoftDelete() bool {
	if x != nil {
		return x.SoftDelete
	}
	return false
}

type ArticleDeleteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Article `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *ArticleDeleteResponse) Reset() {
	*x = ArticleDeleteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_article_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleDeleteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleDeleteResponse) ProtoMessage() {}

func (x *ArticleDeleteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_article_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleDeleteResponse.ProtoReflect.Descriptor instead.
func (*ArticleDeleteResponse) Descriptor() ([]byte, []int) {
	return file_contents_v1_article_proto_rawDescGZIP(), []int{15}
}

func (x *ArticleDeleteResponse) GetData() *Article {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_contents_v1_article_proto protoreflect.FileDescriptor

var file_contents_v1_article_proto_rawDesc = []byte{
	0x0a, 0x19, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x61, 0x67,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x6a, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x12, 0x32, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x6c,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x6a,
	0x0a, 0x19, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x22, 0xf5, 0x01, 0x0a, 0x0a, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x45, 0x4f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73,
	0x6c, 0x75, 0x67, 0x12, 0x29, 0x0a, 0x10, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6d,
	0x65, 0x74, 0x61, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x1c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x73, 0x68, 0x6f, 0x77, 0x5f, 0x74, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x18, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x53, 0x68, 0x6f, 0x77, 0x54, 0x68, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x52,
	0x0a, 0x27, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x5f,
	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x5f, 0x6f, 0x6e, 0x5f,
	0x74, 0x68, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x21, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x46, 0x6f, 0x6c,
	0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x4f, 0x6e, 0x54, 0x68, 0x69, 0x73, 0x50, 0x6f,
	0x73, 0x74, 0x22, 0x85, 0x08, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22,
	0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x31, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x33, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x43,
	0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x6c, 0x75, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6c,
	0x75, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x10,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x39, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x24, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61,
	0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x31, 0x18, 0x34, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x31, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x31, 0x12, 0x34, 0x0a,
	0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x32, 0x52, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x32, 0x12, 0x34, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33,
	0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x52, 0x09,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x33, 0x12, 0x29, 0x0a, 0x03, 0x73, 0x65, 0x6f,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x45, 0x4f, 0x52,
	0x03, 0x73, 0x65, 0x6f, 0x12, 0x34, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x65, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x52, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0x89, 0x06, 0x0a, 0x13, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x5f, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x31, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x33, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x65, 0x61, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x76, 0x65, 0x72, 0x43, 0x61, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41,
	0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4e, 0x0a, 0x10,
	0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x33, 0x0a, 0x16,
	0x69, 0x73, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x69, 0x73,
	0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x29, 0x0a, 0x03, 0x73, 0x65, 0x6f, 0x18, 0x35, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x45, 0x4f, 0x52, 0x03, 0x73, 0x65, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x33, 0x20, 0x03, 0x28, 0x05, 0x52, 0x06, 0x74, 0x61,
	0x67, 0x49, 0x64, 0x73, 0x12, 0x40, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x18,
	0x34, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x64, 0x69, 0x74, 0x73, 0x22, 0x4c, 0x0a, 0x14, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x47, 0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24,
	0x0a, 0x0e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x62, 0x79, 0x5f, 0x73, 0x6c, 0x75, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x42, 0x79,
	0x53, 0x6c, 0x75, 0x67, 0x22, 0x47, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x47,
	0x65, 0x74, 0x4f, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x22, 0x99, 0x05,
	0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x43, 0x0a, 0x0f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65,
	0x12, 0x2c, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2e,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x4e,
	0x0a, 0x10, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x52, 0x0f, 0x73,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x31, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x31, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x5f, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x32, 0x12, 0x22, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x5f, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x33, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65,
	0x12, 0x40, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x5f, 0x62, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x27, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x06, 0x73, 0x6f, 0x72, 0x74,
	0x42, 0x79, 0x22, 0x55, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x5f, 0x41, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x54,
	0x49, 0x54, 0x4c, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10,
	0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4c, 0x44, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x0a, 0x0a,
	0x06, 0x4e, 0x45, 0x57, 0x45, 0x53, 0x54, 0x10, 0x03, 0x22, 0x73, 0x0a, 0x16, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a,
	0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x79,
	0x0a, 0x1c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x4c, 0x0a, 0x14, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x5c, 0x0a, 0x14, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x47, 0x0a, 0x14, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x66, 0x74, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x6f, 0x66, 0x74, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x22, 0x41, 0x0a, 0x15, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x58, 0x0a, 0x0d, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x4c, 0x4c, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x53,
	0x48, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x4f, 0x4f, 0x4e, 0x10,
	0x04, 0x2a, 0xf2, 0x02, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x24, 0x0a, 0x20, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a, 0x1e, 0x41, 0x52, 0x54, 0x49, 0x43,
	0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x54, 0x49, 0x4b, 0x5f,
	0x49, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x53, 0x49, 0x41, 0x10, 0x06, 0x12, 0x19, 0x0a, 0x15, 0x41,
	0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4e, 0x41, 0x4c,
	0x49, 0x53, 0x49, 0x53, 0x10, 0x07, 0x12, 0x16, 0x0a, 0x12, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x50, 0x49, 0x4e, 0x49, 0x10, 0x08, 0x12, 0x18,
	0x0a, 0x14, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53,
	0x45, 0x4a, 0x41, 0x52, 0x41, 0x48, 0x10, 0x09, 0x12, 0x20, 0x0a, 0x1c, 0x41, 0x52, 0x54, 0x49,
	0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x4c, 0x41, 0x4a, 0x41, 0x52,
	0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x54, 0x49, 0x4b, 0x10, 0x0a, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4c, 0x49, 0x54,
	0x45, 0x52, 0x10, 0x0b, 0x12, 0x1b, 0x0a, 0x17, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x47, 0x52, 0x41, 0x46, 0x49, 0x4b, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x42, 0x45, 0x52, 0x49, 0x54, 0x41, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x10, 0x02,
	0x12, 0x1a, 0x0a, 0x16, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x55, 0x50, 0x53, 0x49, 0x10, 0x05, 0x12, 0x1c, 0x0a, 0x18,
	0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x52,
	0x49, 0x54, 0x41, 0x5f, 0x46, 0x4f, 0x54, 0x4f, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x52,
	0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x45, 0x4b, 0x5f, 0x46,
	0x41, 0x4b, 0x54, 0x41, 0x10, 0x04, 0x2a, 0xd1, 0x02, 0x0a, 0x16, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x6f, 0x6d, 0x65, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x2c, 0x0a, 0x28, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x41, 0x4c,
	0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x21, 0x0a, 0x1d, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x01, 0x12, 0x2a, 0x0a, 0x26, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x49, 0x53, 0x53, 0x55, 0x45, 0x10, 0x02, 0x12, 0x31,
	0x0a, 0x2d, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x45, 0x52, 0x49, 0x54,
	0x41, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e, 0x41, 0x53, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x10,
	0x03, 0x12, 0x33, 0x0a, 0x2f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x49, 0x4e,
	0x44, 0x4f, 0x4e, 0x45, 0x53, 0x49, 0x41, 0x5f, 0x44, 0x49, 0x4d, 0x41, 0x54, 0x41, 0x5f, 0x44,
	0x55, 0x4e, 0x49, 0x41, 0x10, 0x04, 0x12, 0x25, 0x0a, 0x21, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41,
	0x47, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x44, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x05, 0x12, 0x2b, 0x0a,
	0x27, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x48, 0x4f, 0x4d, 0x45, 0x50, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x45, 0x52, 0x49, 0x54, 0x41,
	0x5f, 0x50, 0x49, 0x4c, 0x49, 0x48, 0x41, 0x4e, 0x10, 0x06, 0x2a, 0x96, 0x02, 0x0a, 0x11, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x2b, 0x0a, 0x27, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44,
	0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x55, 0x4c, 0x49, 0x53, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x22, 0x0a,
	0x1e, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f,
	0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x50, 0x45, 0x4e, 0x45, 0x52, 0x4a, 0x45, 0x4d, 0x41, 0x48, 0x10,
	0x01, 0x12, 0x23, 0x0a, 0x1f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45,
	0x44, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x50, 0x48, 0x4f, 0x54, 0x4f, 0x47, 0x52,
	0x41, 0x46, 0x45, 0x52, 0x10, 0x02, 0x12, 0x27, 0x0a, 0x23, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c,
	0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x44, 0x45,
	0x53, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x5f, 0x47, 0x52, 0x41, 0x46, 0x49, 0x53, 0x10, 0x03, 0x12,
	0x1e, 0x0a, 0x1a, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x4f, 0x52, 0x10, 0x04, 0x12,
	0x1d, 0x0a, 0x19, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49,
	0x54, 0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x53, 0x55, 0x41, 0x52, 0x41, 0x10, 0x05, 0x12, 0x23,
	0x0a, 0x1f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x49, 0x54,
	0x5f, 0x52, 0x4f, 0x4c, 0x45, 0x5f, 0x56, 0x49, 0x44, 0x45, 0x4f, 0x47, 0x52, 0x41, 0x46, 0x45,
	0x52, 0x10, 0x06, 0x42, 0x49, 0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x64, 0x76, 0x70, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x61, 0x74, 0x61, 0x6d, 0x61,
	0x74, 0x61, 0x2d, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x64, 0x2d, 0x67, 0x6f, 0x2f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contents_v1_article_proto_rawDescOnce sync.Once
	file_contents_v1_article_proto_rawDescData = file_contents_v1_article_proto_rawDesc
)

func file_contents_v1_article_proto_rawDescGZIP() []byte {
	file_contents_v1_article_proto_rawDescOnce.Do(func() {
		file_contents_v1_article_proto_rawDescData = protoimpl.X.CompressGZIP(file_contents_v1_article_proto_rawDescData)
	})
	return file_contents_v1_article_proto_rawDescData
}

var file_contents_v1_article_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_contents_v1_article_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_contents_v1_article_proto_goTypes = []interface{}{
	(ArticleStatus)(0),                   // 0: contents.v1.ArticleStatus
	(ArticleType)(0),                     // 1: contents.v1.ArticleType
	(ArticleSectionHomepage)(0),          // 2: contents.v1.ArticleSectionHomepage
	(ArticleCreditRole)(0),               // 3: contents.v1.ArticleCreditRole
	(ArticleGetListRequest_Sort)(0),      // 4: contents.v1.ArticleGetListRequest.Sort
	(*ArticleCredit)(nil),                // 5: contents.v1.ArticleCredit
	(*ArticleCreditCreateUpdate)(nil),    // 6: contents.v1.ArticleCreditCreateUpdate
	(*ArticleSEO)(nil),                   // 7: contents.v1.ArticleSEO
	(*Article)(nil),                      // 8: contents.v1.Article
	(*ArticleCreateUpdate)(nil),          // 9: contents.v1.ArticleCreateUpdate
	(*ArticleGetOneRequest)(nil),         // 10: contents.v1.ArticleGetOneRequest
	(*ArticleGetOneResponse)(nil),        // 11: contents.v1.ArticleGetOneResponse
	(*ArticleGetListRequest)(nil),        // 12: contents.v1.ArticleGetListRequest
	(*ArticleGetListResponse)(nil),       // 13: contents.v1.ArticleGetListResponse
	(*ArticleGetListStreamResponse)(nil), // 14: contents.v1.ArticleGetListStreamResponse
	(*ArticleCreateRequest)(nil),         // 15: contents.v1.ArticleCreateRequest
	(*ArticleCreateResponse)(nil),        // 16: contents.v1.ArticleCreateResponse
	(*ArticleUpdateRequest)(nil),         // 17: contents.v1.ArticleUpdateRequest
	(*ArticleUpdateResponse)(nil),        // 18: contents.v1.ArticleUpdateResponse
	(*ArticleDeleteRequest)(nil),         // 19: contents.v1.ArticleDeleteRequest
	(*ArticleDeleteResponse)(nil),        // 20: contents.v1.ArticleDeleteResponse
	(*v1.Admin)(nil),                     // 21: admin.v1.Admin
	(*timestamppb.Timestamp)(nil),        // 22: google.protobuf.Timestamp
	(*Tag)(nil),                          // 23: contents.v1.Tag
	(*Category1)(nil),                    // 24: contents.v1.Category1
	(*Category2)(nil),                    // 25: contents.v1.Category2
	(*Category3)(nil),                    // 26: contents.v1.Category3
}
var file_contents_v1_article_proto_depIdxs = []int32{
	3,  // 0: contents.v1.ArticleCredit.role:type_name -> contents.v1.ArticleCreditRole
	21, // 1: contents.v1.ArticleCredit.admin:type_name -> admin.v1.Admin
	3,  // 2: contents.v1.ArticleCreditCreateUpdate.role:type_name -> contents.v1.ArticleCreditRole
	1,  // 3: contents.v1.Article.type:type_name -> contents.v1.ArticleType
	0,  // 4: contents.v1.Article.status:type_name -> contents.v1.ArticleStatus
	2,  // 5: contents.v1.Article.section_homepage:type_name -> contents.v1.ArticleSectionHomepage
	22, // 6: contents.v1.Article.created_at:type_name -> google.protobuf.Timestamp
	22, // 7: contents.v1.Article.updated_at:type_name -> google.protobuf.Timestamp
	22, // 8: contents.v1.Article.published_at:type_name -> google.protobuf.Timestamp
	23, // 9: contents.v1.Article.tags:type_name -> contents.v1.Tag
	24, // 10: contents.v1.Article.category1:type_name -> contents.v1.Category1
	25, // 11: contents.v1.Article.category2:type_name -> contents.v1.Category2
	26, // 12: contents.v1.Article.category3:type_name -> contents.v1.Category3
	7,  // 13: contents.v1.Article.seo:type_name -> contents.v1.ArticleSEO
	5,  // 14: contents.v1.Article.credits:type_name -> contents.v1.ArticleCredit
	1,  // 15: contents.v1.ArticleCreateUpdate.type:type_name -> contents.v1.ArticleType
	0,  // 16: contents.v1.ArticleCreateUpdate.status:type_name -> contents.v1.ArticleStatus
	2,  // 17: contents.v1.ArticleCreateUpdate.section_homepage:type_name -> contents.v1.ArticleSectionHomepage
	22, // 18: contents.v1.ArticleCreateUpdate.published_at:type_name -> google.protobuf.Timestamp
	7,  // 19: contents.v1.ArticleCreateUpdate.seo:type_name -> contents.v1.ArticleSEO
	6,  // 20: contents.v1.ArticleCreateUpdate.credits:type_name -> contents.v1.ArticleCreditCreateUpdate
	8,  // 21: contents.v1.ArticleGetOneResponse.article:type_name -> contents.v1.Article
	0,  // 22: contents.v1.ArticleGetListRequest.status:type_name -> contents.v1.ArticleStatus
	0,  // 23: contents.v1.ArticleGetListRequest.status_multiple:type_name -> contents.v1.ArticleStatus
	1,  // 24: contents.v1.ArticleGetListRequest.type:type_name -> contents.v1.ArticleType
	1,  // 25: contents.v1.ArticleGetListRequest.types:type_name -> contents.v1.ArticleType
	2,  // 26: contents.v1.ArticleGetListRequest.section_homepage:type_name -> contents.v1.ArticleSectionHomepage
	4,  // 27: contents.v1.ArticleGetListRequest.sort_by:type_name -> contents.v1.ArticleGetListRequest.Sort
	8,  // 28: contents.v1.ArticleGetListResponse.data:type_name -> contents.v1.Article
	8,  // 29: contents.v1.ArticleGetListStreamResponse.data:type_name -> contents.v1.Article
	9,  // 30: contents.v1.ArticleCreateRequest.data:type_name -> contents.v1.ArticleCreateUpdate
	8,  // 31: contents.v1.ArticleCreateResponse.data:type_name -> contents.v1.Article
	9,  // 32: contents.v1.ArticleUpdateRequest.data:type_name -> contents.v1.ArticleCreateUpdate
	8,  // 33: contents.v1.ArticleUpdateResponse.data:type_name -> contents.v1.Article
	8,  // 34: contents.v1.ArticleDeleteResponse.data:type_name -> contents.v1.Article
	35, // [35:35] is the sub-list for method output_type
	35, // [35:35] is the sub-list for method input_type
	35, // [35:35] is the sub-list for extension type_name
	35, // [35:35] is the sub-list for extension extendee
	0,  // [0:35] is the sub-list for field type_name
}

func init() { file_contents_v1_article_proto_init() }
func file_contents_v1_article_proto_init() {
	if File_contents_v1_article_proto != nil {
		return
	}
	file_contents_v1_tag_proto_init()
	file_contents_v1_category_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contents_v1_article_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCredit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreditCreateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleSEO); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreateUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleGetOneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleGetOneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleGetListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleGetListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleGetListStreamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleCreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_article_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleDeleteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contents_v1_article_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contents_v1_article_proto_goTypes,
		DependencyIndexes: file_contents_v1_article_proto_depIdxs,
		EnumInfos:         file_contents_v1_article_proto_enumTypes,
		MessageInfos:      file_contents_v1_article_proto_msgTypes,
	}.Build()
	File_contents_v1_article_proto = out.File
	file_contents_v1_article_proto_rawDesc = nil
	file_contents_v1_article_proto_goTypes = nil
	file_contents_v1_article_proto_depIdxs = nil
}
