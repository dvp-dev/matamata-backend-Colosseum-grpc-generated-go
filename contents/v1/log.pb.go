// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.15.2
// source: contents/v1/log.proto

package contents_grpc

import (
	v1 "github.com/dvp-dev/matamata-grpc-generated-go/admin/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogContentSource int32

const (
	LogContentSource_LOG_CONTENT_SOURCE_ALL_UNSPECIFIED LogContentSource = 0
	LogContentSource_LOG_CONTENT_SOURCE_TAG             LogContentSource = 1
	LogContentSource_LOG_CONTENT_SOURCE_ARTICLE         LogContentSource = 2
)

// Enum value maps for LogContentSource.
var (
	LogContentSource_name = map[int32]string{
		0: "LOG_CONTENT_SOURCE_ALL_UNSPECIFIED",
		1: "LOG_CONTENT_SOURCE_TAG",
		2: "LOG_CONTENT_SOURCE_ARTICLE",
	}
	LogContentSource_value = map[string]int32{
		"LOG_CONTENT_SOURCE_ALL_UNSPECIFIED": 0,
		"LOG_CONTENT_SOURCE_TAG":             1,
		"LOG_CONTENT_SOURCE_ARTICLE":         2,
	}
)

func (x LogContentSource) Enum() *LogContentSource {
	p := new(LogContentSource)
	*p = x
	return p
}

func (x LogContentSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogContentSource) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_log_proto_enumTypes[0].Descriptor()
}

func (LogContentSource) Type() protoreflect.EnumType {
	return &file_contents_v1_log_proto_enumTypes[0]
}

func (x LogContentSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogContentSource.Descriptor instead.
func (LogContentSource) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_log_proto_rawDescGZIP(), []int{0}
}

type LogEvent int32

const (
	LogEvent_LOG_EVENT_ALL_UNSPECIFIED LogEvent = 0
	LogEvent_LOG_EVENT_CREATE          LogEvent = 1
	LogEvent_LOG_EVENT_UPDATE          LogEvent = 2
	LogEvent_LOG_EVENT_DELETE          LogEvent = 3
)

// Enum value maps for LogEvent.
var (
	LogEvent_name = map[int32]string{
		0: "LOG_EVENT_ALL_UNSPECIFIED",
		1: "LOG_EVENT_CREATE",
		2: "LOG_EVENT_UPDATE",
		3: "LOG_EVENT_DELETE",
	}
	LogEvent_value = map[string]int32{
		"LOG_EVENT_ALL_UNSPECIFIED": 0,
		"LOG_EVENT_CREATE":          1,
		"LOG_EVENT_UPDATE":          2,
		"LOG_EVENT_DELETE":          3,
	}
)

func (x LogEvent) Enum() *LogEvent {
	p := new(LogEvent)
	*p = x
	return p
}

func (x LogEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_contents_v1_log_proto_enumTypes[1].Descriptor()
}

func (LogEvent) Type() protoreflect.EnumType {
	return &file_contents_v1_log_proto_enumTypes[1]
}

func (x LogEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogEvent.Descriptor instead.
func (LogEvent) EnumDescriptor() ([]byte, []int) {
	return file_contents_v1_log_proto_rawDescGZIP(), []int{1}
}

type Log struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AdminId       int32                  `protobuf:"varint,2,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	ContentSource string                 `protobuf:"bytes,3,opt,name=content_source,json=contentSource,proto3" json:"content_source,omitempty"`
	ContentId     int32                  `protobuf:"varint,4,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	Event         LogEvent               `protobuf:"varint,5,opt,name=event,proto3,enum=contents.v1.LogEvent" json:"event,omitempty"`
	Payload       string                 `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Admin         *v1.Admin              `protobuf:"bytes,8,opt,name=admin,proto3" json:"admin,omitempty"`
}

func (x *Log) Reset() {
	*x = Log{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_log_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Log) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Log) ProtoMessage() {}

func (x *Log) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_log_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Log.ProtoReflect.Descriptor instead.
func (*Log) Descriptor() ([]byte, []int) {
	return file_contents_v1_log_proto_rawDescGZIP(), []int{0}
}

func (x *Log) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Log) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *Log) GetContentSource() string {
	if x != nil {
		return x.ContentSource
	}
	return ""
}

func (x *Log) GetContentId() int32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *Log) GetEvent() LogEvent {
	if x != nil {
		return x.Event
	}
	return LogEvent_LOG_EVENT_ALL_UNSPECIFIED
}

func (x *Log) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *Log) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Log) GetAdmin() *v1.Admin {
	if x != nil {
		return x.Admin
	}
	return nil
}

type LogGetListInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContentSource  LogContentSource `protobuf:"varint,1,opt,name=content_source,json=contentSource,proto3,enum=contents.v1.LogContentSource" json:"content_source,omitempty"`
	ContentId      int32            `protobuf:"varint,2,opt,name=content_id,json=contentId,proto3" json:"content_id,omitempty"`
	AdminId        int32            `protobuf:"varint,3,opt,name=admin_id,json=adminId,proto3" json:"admin_id,omitempty"`
	Page           int32            `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`
	ContentPerPage int32            `protobuf:"varint,5,opt,name=content_per_page,json=contentPerPage,proto3" json:"content_per_page,omitempty"`
	WithAdmin      bool             `protobuf:"varint,6,opt,name=with_admin,json=withAdmin,proto3" json:"with_admin,omitempty"`
}

func (x *LogGetListInput) Reset() {
	*x = LogGetListInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_log_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogGetListInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogGetListInput) ProtoMessage() {}

func (x *LogGetListInput) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_log_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogGetListInput.ProtoReflect.Descriptor instead.
func (*LogGetListInput) Descriptor() ([]byte, []int) {
	return file_contents_v1_log_proto_rawDescGZIP(), []int{1}
}

func (x *LogGetListInput) GetContentSource() LogContentSource {
	if x != nil {
		return x.ContentSource
	}
	return LogContentSource_LOG_CONTENT_SOURCE_ALL_UNSPECIFIED
}

func (x *LogGetListInput) GetContentId() int32 {
	if x != nil {
		return x.ContentId
	}
	return 0
}

func (x *LogGetListInput) GetAdminId() int32 {
	if x != nil {
		return x.AdminId
	}
	return 0
}

func (x *LogGetListInput) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LogGetListInput) GetContentPerPage() int32 {
	if x != nil {
		return x.ContentPerPage
	}
	return 0
}

func (x *LogGetListInput) GetWithAdmin() bool {
	if x != nil {
		return x.WithAdmin
	}
	return false
}

type LogGetListOutput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data    []*Log `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	MaxPage int32  `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Count   int32  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *LogGetListOutput) Reset() {
	*x = LogGetListOutput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contents_v1_log_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogGetListOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogGetListOutput) ProtoMessage() {}

func (x *LogGetListOutput) ProtoReflect() protoreflect.Message {
	mi := &file_contents_v1_log_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogGetListOutput.ProtoReflect.Descriptor instead.
func (*LogGetListOutput) Descriptor() ([]byte, []int) {
	return file_contents_v1_log_proto_rawDescGZIP(), []int{2}
}

func (x *LogGetListOutput) GetData() []*Log {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogGetListOutput) GetMaxPage() int32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *LogGetListOutput) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_contents_v1_log_proto protoreflect.FileDescriptor

var file_contents_v1_log_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f,
	0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x02, 0x0a, 0x03,
	0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0xee, 0x01,
	0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x12, 0x44, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x5f, 0x70, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x50, 0x65, 0x72, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x77, 0x69, 0x74, 0x68, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x22, 0x69,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x47, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2a, 0x76, 0x0a, 0x10, 0x4c, 0x6f, 0x67,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x26, 0x0a,
	0x22, 0x4c, 0x4f, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x4c, 0x4f, 0x47, 0x5f, 0x43, 0x4f, 0x4e,
	0x54, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x41, 0x47, 0x10,
	0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x4c, 0x4f, 0x47, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4e, 0x54,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x41, 0x52, 0x54, 0x49, 0x43, 0x4c, 0x45, 0x10,
	0x02, 0x2a, 0x6b, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x19, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10,
	0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45,
	0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4c, 0x4f, 0x47, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x03, 0x42, 0x49,
	0x5a, 0x47, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x64, 0x76, 0x70,
	0x2d, 0x64, 0x65, 0x76, 0x2f, 0x6d, 0x61, 0x74, 0x61, 0x6d, 0x61, 0x74, 0x61, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x64, 0x2d, 0x67, 0x6f, 0x2f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_contents_v1_log_proto_rawDescOnce sync.Once
	file_contents_v1_log_proto_rawDescData = file_contents_v1_log_proto_rawDesc
)

func file_contents_v1_log_proto_rawDescGZIP() []byte {
	file_contents_v1_log_proto_rawDescOnce.Do(func() {
		file_contents_v1_log_proto_rawDescData = protoimpl.X.CompressGZIP(file_contents_v1_log_proto_rawDescData)
	})
	return file_contents_v1_log_proto_rawDescData
}

var file_contents_v1_log_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_contents_v1_log_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_contents_v1_log_proto_goTypes = []interface{}{
	(LogContentSource)(0),         // 0: contents.v1.LogContentSource
	(LogEvent)(0),                 // 1: contents.v1.LogEvent
	(*Log)(nil),                   // 2: contents.v1.Log
	(*LogGetListInput)(nil),       // 3: contents.v1.LogGetListInput
	(*LogGetListOutput)(nil),      // 4: contents.v1.LogGetListOutput
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
	(*v1.Admin)(nil),              // 6: admin.v1.Admin
}
var file_contents_v1_log_proto_depIdxs = []int32{
	1, // 0: contents.v1.Log.event:type_name -> contents.v1.LogEvent
	5, // 1: contents.v1.Log.created_at:type_name -> google.protobuf.Timestamp
	6, // 2: contents.v1.Log.admin:type_name -> admin.v1.Admin
	0, // 3: contents.v1.LogGetListInput.content_source:type_name -> contents.v1.LogContentSource
	2, // 4: contents.v1.LogGetListOutput.data:type_name -> contents.v1.Log
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_contents_v1_log_proto_init() }
func file_contents_v1_log_proto_init() {
	if File_contents_v1_log_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_contents_v1_log_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Log); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_log_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogGetListInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contents_v1_log_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogGetListOutput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contents_v1_log_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contents_v1_log_proto_goTypes,
		DependencyIndexes: file_contents_v1_log_proto_depIdxs,
		EnumInfos:         file_contents_v1_log_proto_enumTypes,
		MessageInfos:      file_contents_v1_log_proto_msgTypes,
	}.Build()
	File_contents_v1_log_proto = out.File
	file_contents_v1_log_proto_rawDesc = nil
	file_contents_v1_log_proto_goTypes = nil
	file_contents_v1_log_proto_depIdxs = nil
}
